(self.webpackChunkwebpack=self.webpackChunkwebpack||[]).push([["docs_zh_apis_app_runtime_model_Provider_mdx"],{12161:function(e,n,r){"use strict";Object.defineProperty(n,"__esModule",{value:!0});!function(e,n){for(var r in n)Object.defineProperty(e,r,{enumerable:!0,get:n[r]})}(n,{frontmatter:function(){return i},title:function(){return t},toc:function(){return o},default:function(){return l}});var s=r("12151"),d=r("21447"),c=r.ir(r("67291"));let i={sidebar_position:8,title:"Provider"},t="Provider",o=[{text:"函数签名",depth:2,id:"函数签名"},{text:"参数",depth:3,id:"参数"},{text:"示例",depth:2,id:"示例"}];function a(e){let n=Object.assign({h1:"h1",a:"a",p:"p",code:"code",h2:"h2",div:"div",button:"button",pre:"pre",h3:"h3",ul:"ul",li:"li"},(0,d.useMDXComponents)(),e.components);return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsxs)(n.h1,{id:"provider",children:["Provider",(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#provider",children:"#"})]}),"\n","\n",(0,s.jsx)(c.default,{}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"Provider"})," 是一个组件，它将 Reduck 的 Store 注入到应用的组件树中，使组件树内部的组件可以访问 Model。一般情况下，",(0,s.jsx)(n.code,{children:"Provider"})," 会定义在组件树的最顶层。"]}),"\n",(0,s.jsxs)(n.h2,{id:"函数签名",children:["函数签名",(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#函数签名",children:"#"})]}),"\n",(0,s.jsx)(n.div,{className:"language-",children:(0,s.jsxs)(n.div,{className:"modern-code-content",children:[(0,s.jsx)(n.button,{className:"copy"}),(0,s.jsx)(n.pre,{className:"code",children:(0,s.jsx)(n.code,{className:"language-ts",children:"interface ProviderProps {\n  store?: ReduckStore;\n  config?: AppConfig;\n}\n"})})]})}),"\n",(0,s.jsxs)(n.h3,{id:"参数",children:["参数",(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#参数",children:"#"})]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["store：",(0,s.jsx)(n.a,{href:"/apis/app/runtime/model/create-store",children:(0,s.jsx)(n.code,{children:"createStore"})})," 创建的 Store 对象。"]}),"\n",(0,s.jsxs)(n.li,{children:["config：创建 Reduck Store 的配置，同 ",(0,s.jsx)(n.a,{href:"/apis/app/runtime/model/create-app",children:(0,s.jsx)(n.code,{children:"createApp"})})," 的 ",(0,s.jsx)(n.code,{children:"config"})," 参数。"]}),"\n"]}),"\n",(0,s.jsxs)(n.h2,{id:"示例",children:["示例",(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#示例",children:"#"})]}),"\n",(0,s.jsxs)(n.div,{className:"language-",children:[(0,s.jsx)(n.div,{className:"modern-code-title",children:"应用入口文件"}),(0,s.jsxs)(n.div,{className:"modern-code-content",children:[(0,s.jsx)(n.button,{className:"copy"}),(0,s.jsx)(n.pre,{className:"code",children:(0,s.jsx)(n.code,{className:"language-tsx",meta:'title="应用入口文件"',children:"ReactDOM.render(\n  <Provider>\n    <App />\n  </Provider>,\n  document.getElementById('root'),\n);\n"})})]})]})]})}var l=function(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},{wrapper:n}=Object.assign({},(0,d.useMDXComponents)(),e.components);return n?(0,s.jsx)(n,Object.assign({},e,{children:(0,s.jsx)(a,e)})):a(e)}},67291:function(e,n,r){"use strict";Object.defineProperty(n,"__esModule",{value:!0}),Object.defineProperty(n,"default",{enumerable:!0,get:function(){return i}});var s=r("12151"),d=r("21447");function c(e){let n=Object.assign({div:"div",p:"p",code:"code"},(0,d.useMDXComponents)(),e.components);return(0,s.jsxs)(n.div,{className:"modern-directive info",children:[(0,s.jsx)(n.p,{className:"modern-directive-title",children:"补充信息"}),(0,s.jsxs)(n.div,{className:"modern-directive-content",children:["默认情况下，本节所有 API 的导出包名为：",(0,s.jsx)(n.code,{children:"@modern-js/runtime/model"}),"。","\n",(0,s.jsxs)(n.p,{children:["如果是在 Modern.js 以外单独集成 Reduck，导出包名为：",(0,s.jsx)(n.code,{children:"@modern-js-reduck/react"}),"。"]}),"\n"]})]})}var i=function(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},{wrapper:n}=Object.assign({},(0,d.useMDXComponents)(),e.components);return n?(0,s.jsx)(n,Object.assign({},e,{children:(0,s.jsx)(c,e)})):c(e)}}}]);