(self.webpackChunkwebpack=self.webpackChunkwebpack||[]).push([["docs_en_api_builder-instance_mdx~docs_en_api_plugin-hooks_mdx7"],{45390:function(e,n,r){"use strict";Object.defineProperty(n,"__esModule",{value:!0});!function(e,n){for(var r in n)Object.defineProperty(e,r,{enumerable:!0,get:n[r]})}(n,{frontmatter:function(){return i},title:function(){return o},toc:function(){return s},default:function(){return a}});var c=r("12151"),t=r("21447"),i={},o="",s=[];function l(e){var n=Object.assign({p:"p",code:"code",ul:"ul",li:"li",strong:"strong",div:"div",button:"button",pre:"pre"},(0,t.useMDXComponents)(),e.components);return(0,c.jsxs)(c.Fragment,{children:[(0,c.jsxs)(n.p,{children:["Called after creating a compiler instance, before executing a build, when you execute ",(0,c.jsx)(n.code,{children:"builder.startDevServer"}),", ",(0,c.jsx)(n.code,{children:"builder.build"})," or ",(0,c.jsx)(n.code,{children:"builder.createCompiler"}),", this hook will be called. You can get the compiler instance through the ",(0,c.jsx)(n.code,{children:"compiler"})," parameter."]}),"\n",(0,c.jsxs)(n.ul,{children:["\n",(0,c.jsx)(n.li,{children:(0,c.jsx)(n.strong,{children:"Type"})}),"\n"]}),"\n",(0,c.jsx)(n.div,{className:"language-",children:(0,c.jsxs)(n.div,{className:"modern-code-content",children:[(0,c.jsx)(n.button,{className:"copy"}),(0,c.jsx)(n.pre,{className:"code",children:(0,c.jsx)(n.code,{className:"language-ts",children:"function OnAfterCreateCompiler(callback: (params: {\n  compiler: Compiler | MultiCompiler;\n}) => Promise<void> | void;): void;\n"})})]})})]})}var a=function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},n=Object.assign({},(0,t.useMDXComponents)(),e.components).wrapper;return n?(0,c.jsx)(n,Object.assign({},e,{children:(0,c.jsx)(l,e)})):l(e)}}}]);