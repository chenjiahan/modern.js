(self.webpackChunkwebpack=self.webpackChunkwebpack||[]).push([["docs_en_guide_conventional-route_mdx"],{243:function(e,n,o){"use strict";Object.defineProperty(n,"__esModule",{value:!0});!function(e,n){for(var o in n)Object.defineProperty(e,o,{enumerable:!0,get:n[o]})}(n,{frontmatter:function(){return i},title:function(){return c},toc:function(){return r},default:function(){return a}});var t=o("12151"),s=o("21447");let i={},c="Conventional Route",r=[{text:"What is it?",depth:2,id:"what-is-it?"},{text:"Mapping Rules",depth:2,id:"mapping-rules"},{text:"Custom Behavior",depth:2,id:"custom-behavior"},{text:"Best Practices",depth:2,id:"best-practices"}];function d(e){let n=Object.assign({h1:"h1",a:"a",h2:"h2",p:"p",code:"code",div:"div",button:"button",pre:"pre"},(0,s.useMDXComponents)(),e.components);return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsxs)(n.h1,{id:"conventional-route",children:["Conventional Route",(0,t.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#conventional-route",children:"#"})]}),"\n",(0,t.jsxs)(n.h2,{id:"what-is-it?",children:["What is it?",(0,t.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#what-is-it?",children:"#"})]}),"\n",(0,t.jsx)(n.p,{children:"Modern.js Doc uses file system routing, and the file path of the page is simply mapped to the routing path, which makes the routing of the entire project very intuitive."}),"\n",(0,t.jsxs)(n.p,{children:["For example, if there is a file named ",(0,t.jsx)(n.code,{children:"foo.md"})," in the ",(0,t.jsx)(n.code,{children:"docs"})," directory, the routing path for that file will be ",(0,t.jsx)(n.code,{children:"/foo"}),"."]}),"\n",(0,t.jsxs)(n.h2,{id:"mapping-rules",children:["Mapping Rules",(0,t.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#mapping-rules",children:"#"})]}),"\n",(0,t.jsx)(n.p,{children:"Modern.js Doc automatically scans the root directory and all subdirectories, and maps file paths to route paths. For example, if you have the following file structure:"}),"\n",(0,t.jsx)(n.div,{className:"language-",children:(0,t.jsxs)(n.div,{className:"modern-code-content",children:[(0,t.jsx)(n.button,{className:"copy"}),(0,t.jsx)(n.pre,{className:"code",children:(0,t.jsx)(n.code,{className:"language-bash",children:"docs\n├── foo\n│   └── bar.md\n└── foo.md\n"})})]})}),"\n",(0,t.jsxs)(n.p,{children:["Then ",(0,t.jsx)(n.code,{children:"bar.md"})," will be routed to ",(0,t.jsx)(n.code,{children:"/foo/bar"}),", and ",(0,t.jsx)(n.code,{children:"foo.md"})," will be routed to ",(0,t.jsx)(n.code,{children:"/foo"}),"."]}),"\n",(0,t.jsx)(n.p,{children:"The specific mapping rules are as follows:"}),"\n",(0,t.jsxs)(n.p,{children:["| file path | route path\n|\n| --------------- | ---------- |\n| ",(0,t.jsx)(n.code,{children:"index.md"})," | ",(0,t.jsx)(n.code,{children:"/"})," |\n| ",(0,t.jsx)(n.code,{children:"/foo.md"})," | ",(0,t.jsx)(n.code,{children:"/foo"})," |\n| ",(0,t.jsx)(n.code,{children:"/foo/bar.md"})," | ",(0,t.jsx)(n.code,{children:"/foo/bar"})," |\n| ",(0,t.jsx)(n.code,{children:"/zoo/index.md"})," | ",(0,t.jsx)(n.code,{children:"/zoo"})," |"]}),"\n",(0,t.jsxs)(n.h2,{id:"custom-behavior",children:["Custom Behavior",(0,t.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#custom-behavior",children:"#"})]}),"\n",(0,t.jsxs)(n.p,{children:["If you want to customize the routing behavior, you can use the ",(0,t.jsx)(n.code,{children:"route"})," field in the configuration file. For example:"]}),"\n",(0,t.jsxs)(n.div,{className:"language-",children:[(0,t.jsx)(n.div,{className:"modern-code-title",children:"modern.config.ts"}),(0,t.jsxs)(n.div,{className:"modern-code-content",children:[(0,t.jsx)(n.button,{className:"copy"}),(0,t.jsx)(n.pre,{className:"code",children:(0,t.jsx)(n.code,{className:"language-ts",meta:'title="modern.config.ts"',children:"import { defineConfig } from '@modern-js/doc-tools';\n\nexport default defineConfig({\n  route: {\n    // These files will be excluded from the routing (support glob pattern)\n    exclude: ['custom.tsx', 'component/**/*']\n    // These files will be included in the routing (support glob pattern)\n    include: ['other-dir/**/*'],\n  }\n});\n"})})]})]}),"\n",(0,t.jsxs)(n.h2,{id:"best-practices",children:["Best Practices",(0,t.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#best-practices",children:"#"})]}),"\n",(0,t.jsxs)(n.p,{children:["We recommend that you place documentation files in the ",(0,t.jsx)(n.code,{children:"docs"})," directory to make your project more clear. For non-documentation content, such as custom components, util functions, etc., they can be maintained outside the ",(0,t.jsx)(n.code,{children:"docs"})," directory. For example:"]}),"\n",(0,t.jsx)(n.div,{className:"language-",children:(0,t.jsxs)(n.div,{className:"modern-code-content",children:[(0,t.jsx)(n.button,{className:"copy"}),(0,t.jsx)(n.pre,{className:"code",children:(0,t.jsx)(n.code,{className:"language-bash",children:"docs\n└── foo.mdx\nsrc\n├── components\n│   └── CustomComponent.tsx\n└── utils\n    └── utils.ts\n"})})]})})]})}var a=function(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},{wrapper:n}=Object.assign({},(0,s.useMDXComponents)(),e.components);return n?(0,t.jsx)(n,Object.assign({},e,{children:(0,t.jsx)(d,e)})):d(e)}}}]);