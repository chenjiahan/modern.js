"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[6505],{44993:(e,n,t)=>{t.d(n,{Zo:()=>s,kt:()=>m});var r=t(52983);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function a(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?a(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,r,o=function(e,n){if(null==e)return{};var t,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var p=r.createContext({}),c=function(e){var n=r.useContext(p),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},s=function(e){var n=c(e.components);return r.createElement(p.Provider,{value:n},e.children)},u={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},d=r.forwardRef((function(e,n){var t=e.components,o=e.mdxType,a=e.originalType,p=e.parentName,s=l(e,["components","mdxType","originalType","parentName"]),d=c(t),m=o,f=d["".concat(p,".").concat(m)]||d[m]||u[m]||a;return t?r.createElement(f,i(i({ref:n},s),{},{components:t})):r.createElement(f,i({ref:n},s))}));function m(e,n){var t=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var a=t.length,i=new Array(a);i[0]=d;var l={};for(var p in n)hasOwnProperty.call(n,p)&&(l[p]=n[p]);l.originalType=e,l.mdxType="string"==typeof e?e:o,i[1]=l;for(var c=2;c<a;c++)i[c]=t[c];return r.createElement.apply(null,i)}return r.createElement.apply(null,t)}d.displayName="MDXCreateElement"},12109:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>s,contentTitle:()=>p,default:()=>m,frontMatter:()=>l,metadata:()=>c,toc:()=>u});var r=t(18249),o=(t(52983),t(44993));const a={toc:[{value:"Typical Example",id:"typical-example",level:4},{value:"Monorepo Project",id:"monorepo-project",level:4}]};function i(e){let{components:n,...t}=e;return(0,o.kt)("wrapper",(0,r.Z)({},a,t,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Type: ",(0,o.kt)("inlineCode",{parentName:"li"},"Array<string | RegExp>")),(0,o.kt)("li",{parentName:"ul"},"Default: ",(0,o.kt)("inlineCode",{parentName:"li"},"[]"))),(0,o.kt)("p",null,"In order to maintain faster compilation speed, Builder will not compile JavaScript/TypeScript files under node_modules through ",(0,o.kt)("inlineCode",{parentName:"p"},"babel-loader")," or ",(0,o.kt)("inlineCode",{parentName:"p"},"ts-loader")," by default, as will as the JavaScript/TypeScript files outside the current project directory."),(0,o.kt)("p",null,"Through the ",(0,o.kt)("inlineCode",{parentName:"p"},"source.include")," config, you can specify directories or modules that need additional compilation. The usage is consistent with ",(0,o.kt)("a",{parentName:"p",href:"https://webpack.js.org/configuration/module/#ruleinclude"},"Rule.include")," in webpack, which supports passing in strings or regular expressions to match the module path."),(0,o.kt)("p",null,"For example:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},"import path from 'path';\n\nexport default {\n  source: {\n    include: [path.resolve(__dirname, '../other-dir')],\n  },\n};\n")),(0,o.kt)("h4",{id:"typical-example"},"Typical Example"),(0,o.kt)("p",null,"A typical usage scenario is to compile files under node_modules, because some third-party dependencies have ES6+ syntax, which may cause them to fail to run on low-version browsers. You can solve the problem by using this config to specify the dependencies that need to be compiled. Take ",(0,o.kt)("inlineCode",{parentName:"p"},"query-string")," as an example, you can do the following config:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},"import path from 'path';\n\nexport default {\n  source: {\n    include: [\n      // Method 1:\n      // First get the path of the module by require.resolve\n      // Then pass path.dirname to point to the corresponding directory\n      path.dirname(require.resolve('query-string')),\n      // Method 2:\n      // Match by regular expression\n      // All paths containing `/query-string/` will be matched\n      /\\/query-string\\//,\n    ],\n  },\n};\n")),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},"Note that this config will only compile the code of ",(0,o.kt)("inlineCode",{parentName:"p"},"query-string")," itself, not the ",(0,o.kt)("strong",{parentName:"p"},"sub-dependencies")," of ",(0,o.kt)("inlineCode",{parentName:"p"},"query-string"),". If you need to compile a sub-dependency of ",(0,o.kt)("inlineCode",{parentName:"p"},"query-string"),", you need to add the corresponding npm package to ",(0,o.kt)("inlineCode",{parentName:"p"},"source.include"),".")),(0,o.kt)("h4",{id:"monorepo-project"},"Monorepo Project"),(0,o.kt)("p",null,"When using Monorepo, if you need to refer to the source code of other libraries in Monorepo, you can add the corresponding library to ",(0,o.kt)("inlineCode",{parentName:"p"},"source.include"),":"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},"import path from 'path';\n\nexport default {\n  source: {\n    include: [\n      // Method 1:\n      // Compile all files in Monorepo's package directory\n      path.resolve(__dirname, '../../packages'),\n\n      // Method 2:\n      // Compile the source code of a package in Monorepo's package directory\n      // This way of writing matches the range more accurately and has less impact on the overall build performance.\n      path.resolve(__dirname, '../../packages/xxx/src'),\n    ],\n  },\n};\n")))}i.isMDXComponent=!0;const l={title:"source.include",sidebar_label:"include"},p=void 0,c={unversionedId:"configure/app/source/include",id:"configure/app/source/include",title:"source.include",description:"This configuration is Modern.js Builder configuration, more detail can see source.include\u3002",source:"@site/../../packages/toolkit/main-doc/en/docusaurus-plugin-content-docs/current/configure/app/source/include.md",sourceDirName:"configure/app/source",slug:"/configure/app/source/include",permalink:"/v2/en/docs/configure/app/source/include",draft:!1,tags:[],version:"current",frontMatter:{title:"source.include",sidebar_label:"include"},sidebar:"configsAppSidebar",previous:{title:"globalVars",permalink:"/v2/en/docs/configure/app/source/global-vars"},next:{title:"moduleScopes",permalink:"/v2/en/docs/configure/app/source/module-scopes"}},s={},u=[],d={toc:u};function m(e){let{components:n,...t}=e;return(0,o.kt)("wrapper",(0,r.Z)({},d,t,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("admonition",{title:"BUILDER",type:"info"},(0,o.kt)("p",{parentName:"admonition"},"This configuration is Modern.js Builder configuration, more detail can see ",(0,o.kt)("a",{parentName:"p",href:"https://modernjs.dev/builder/zh/api/config-source.html#source-include"},"source.include"),"\u3002")),(0,o.kt)(i,{mdxType:"Main"}))}m.isMDXComponent=!0}}]);